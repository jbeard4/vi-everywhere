<scxml 
	xmlns="http://www.w3.org/2005/07/scxml" 
	xmlns:vi="urn:vi"
	profile="ecmascript" 
	version="1.0" 
	name="viBehaviour" 
	initial="initial_default">

	<datamodel>
		<data id="controller"/>
	</datamodel>

	<state id="initial_default">
		<transition event="init" target="normal_mode">
			<assign location="controller" expr="_event.data"/>	
		</transition>
	</state>

	<state id="select_mode">
		<onentry>
			<script>
				controller.updateModeText("-- SELECT --")
			</script>
		</onentry>

		<vi:macro name="nonprintable_keys_used_to_move_cursor">
			<vi:param name="updateSelection" value="true"/>
		</vi:macro>

		<transition event="ctrl_g" target="visual_mode" />
	</state>

	<state id="normal_mode">

		<onentry>
			<script>
				controller.makeCursorFat();
				controller.updateModeText("-- NORMAL --")
			</script>
		</onentry>

		<vi:macro name="printable_keys_used_to_move_cursor">
			<vi:param name="updateSelection" value="false"/>
		</vi:macro>

		<vi:macro name="nonprintable_keys_used_to_move_cursor">
			<vi:param name="updateSelection" value="true"/>
		</vi:macro>
			
		<transition event="v" target="visual_character"/>
		<transition event="V" target="visual_line"/>
		<transition event="ctrl_v" target="visual_block"/>

		<!--
		<transition event="G" target="normal_mode">
			<script>	
				controller.moveToLastLineOfDocument()
			</script>
		</transition>

		<transition event="g" target="after_g"/>

		<state id="after_g">
			<script>
				controller.moveToFirstLineOfDocument()
			</script>
		</state>
		-->

		<transition event="i" target="insert_mode"/>

		<transition event="a" target="insert_mode">
			<script>
				controller.moveRight(true);
			</script>
		</transition>

	</state>

	<state id="visual_mode" initial="visual_character">
		<!-- these will be the same in both visual and select -->
		<onentry>
			<script>
				controller.makeCursorFat();
				controller.startSelection(); 
			</script>
		</onentry>

		<onexit>
			<script>
				controller.clearSelection(); 
			</script>
		</onexit>

		<transition event="esc" target="normal_mode"/>

		<transition event="ctrl_g" target="select_mode" />

		<vi:macro name="printable_keys_used_to_move_cursor">
			<vi:param name="updateSelection" value="true"/>
		</vi:macro>

		<vi:macro name="nonprintable_keys_used_to_move_cursor">
			<vi:param name="updateSelection" value="true"/>
		</vi:macro>

		<!-- TODO: figure out what kind of API we want for selection stuff -->
		<state id="visual_line">
			<onentry>
				<script>
					controller.updateModeText("-- VISUAL LINE --")
					controller.setSelectionMode(controller.SELECTION_MODE.LINE);
				</script>
			</onentry>
			<transition event="ctrl_v" target="visual_block"/>
			<transition event="v" target="visual_character"/>
		</state>

		<state id="visual_block">
			<onentry>
				<script>
					controller.updateModeText("-- VISUAL BLOCK --")
					controller.setSelectionMode(controller.SELECTION_MODE.BLOCK);
				</script>
			</onentry>
			<transition event="v" target="visual_character"/>
			<transition event="V" target="visual_line"/>
		</state>

		<state id="visual_character">
			<onentry>
				<script>
					controller.updateModeText("-- VISUAL --")
					controller.setSelectionMode(controller.SELECTION_MODE.CHARACTER);
				</script>
			</onentry>
			<transition event="ctrl_v" target="visual_block"/>
			<transition event="V" target="visual_line"/>
		</state>

	</state>


	<state id="insert_mode">
		<onentry>
			<script>
				controller.makeCursorThin()
				controller.updateModeText("-- INSERT --")
			</script>
		</onentry>

		<vi:macro name="nonprintable_keys_used_to_move_cursor">
			<vi:param name="updateSelection" value="true"/>
		</vi:macro>

		<transition event="esc" target="normal_mode">
			<script>
				controller.moveLeft()
			</script>
		</transition>

		<transition event="enter">
			<script>
				controller.writeNewLine()
			</script>
		</transition>

		<transition event="backspace">
			<script>
				controller.writeBackspace()
			</script>
		</transition>


		<!-- everything else -->
		<transition event="*">
			<script>
				controller.writeChar(_event.data.charCode)
			</script>
		</transition>
	</state>


	<state id="command_mode">
		<onentry>
			<script>
				controller.updateModeText("-- COMMAND --")
			</script>
		</onentry>

		<!-- printable characters: add to command buffer -->
		<!-- newline: run command -->
		
		<transition event="esc" target="normal_mode"/>
	</state>

	
</scxml>

